<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                    xmlns:converter="clr-namespace:RemoteDesktop.Common.Converters">

   <converter:TreeItemMarginConverter x:Key="TreeItemMarginConverter" />

   <Style x:Key="TreeViewItemToggle" TargetType="{x:Type ToggleButton}">
      <Setter Property="Padding" Value="5,0" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
               <Grid Width="15" Height="13" Background="Transparent">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Collapsed">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Expanded">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Collapsed">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Expanded">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Indeterminate" />
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>

                  <!-- Change themed color -->
                  <Path x:Name="Expanded" Fill="#666" Data="M 0,4 L 4,0 L 8,4 Z" VerticalAlignment="Center" HorizontalAlignment="Center" />
                  <Path x:Name="Collapsed" Fill="#666" Data="M 0,0 L 8,0 L 4,4 Z" VerticalAlignment="Center" HorizontalAlignment="Center" />
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style TargetType="{x:Type TreeViewItem}">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="HorizontalContentAlignment" Value="Left" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Padding" Value="4" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type TreeViewItem}">
               <Grid>
                  <Grid.RowDefinitions>
                     <RowDefinition MinHeight="{TemplateBinding MinHeight}" />
                     <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                     <DockPanel LastChildFill="True" Margin="{Binding Converter={StaticResource TreeItemMarginConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TreeViewItemToggle}" />
                        <ContentPresenter VerticalAlignment="Center" x:Name="PART_Header" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                     </DockPanel>
                  </Border>
                  <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" />
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsExpanded" Value="false">
                     <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
                  </Trigger>
                  <Trigger Property="HasItems" Value="false">
                     <Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
                  </Trigger>
                  <Trigger Property="IsSelected" Value="true">
                     <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ButtonHoverBrush}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style TargetType="{x:Type TreeView}">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Margin" Value="3.5,0,3.5,4" />
      <Setter Property="BorderThickness" Value="0" />

      <Setter Property="dd:DragDrop.IsDragSource" Value="True" />
      <Setter Property="dd:DragDrop.IsDropTarget" Value="True" />
      <Setter Property="dd:DragDrop.DropHandler" Value="{Binding DropHandler}" />
      <Setter Property="dd:DragDrop.DropTargetAdornerBrush" Value="{DynamicResource GripBrush}" />
      <Setter Property="dd:DragDrop.DropTargetHighlightBrush" Value="{DynamicResource SelectContentBrush}" />
      <Setter Property="dd:DragDrop.DragMouseAnchorPoint" Value="{Binding DropHandler.DragMouseAnchorPoint}" />

      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type TreeView}">
               <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                  <ScrollViewer x:Name="ScrollBar" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
                     <ItemsPresenter />
                  </ScrollViewer>
               </Border>

               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="ScrollBar" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>