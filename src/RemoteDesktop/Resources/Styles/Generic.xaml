<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol">

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="Icon" ContentSource="Icon" Grid.Column="0" Margin="5" VerticalAlignment="Center" />
                            <ContentPresenter x:Name="Header" ContentSource="Header" Grid.Column="1" Margin="5" VerticalAlignment="Center" RecognizesAccessKey="True" />

                            <Popup Grid.Column="0" x:Name="PART_Popup" IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="Right" HorizontalOffset="6" VerticalOffset="-3" PopupAnimation="Fade">
                                <Border BorderThickness="1" Width="140" BorderBrush="{DynamicResource BorderBrush}" Background="{DynamicResource RegionBrush}">
                                    <ItemsPresenter x:Name="ItemsPresenter" Margin="0" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="Opacity" Value="0.5" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Bottom" />
                            <Setter TargetName="PART_Popup" Property="HorizontalOffset" Value="-6" />
                            <Setter TargetName="PART_Popup" Property="VerticalOffset" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type hc:TextBox}" BasedOn="{StaticResource TextBoxExtend}">
        <Setter Property="hc:InfoElement.Necessary" Value="True" />
        <Setter Property="hc:InfoElement.TitleWidth" Value="80" />
        <Setter Property="hc:InfoElement.TitlePlacement" Value="Left" />
    </Style>

    <Style TargetType="{x:Type hc:PasswordBox}" BasedOn="{StaticResource PasswordBoxPlusBaseStyle}">
        <Setter Property="ShowEyeButton" Value="True" />
        <Setter Property="IsSafeEnabled" Value="False" />
        <Setter Property="hc:InfoElement.Necessary" Value="True" />
        <Setter Property="hc:InfoElement.TitleWidth" Value="80" />
        <Setter Property="hc:InfoElement.TitlePlacement" Value="Left" />
    </Style>

    <Style TargetType="{x:Type hc:ComboBox}" BasedOn="{StaticResource ComboBoxExtend}">
        <Setter Property="hc:InfoElement.Necessary" Value="True" />
        <Setter Property="hc:InfoElement.TitleWidth" Value="80" />
        <Setter Property="hc:InfoElement.TitlePlacement" Value="Left" />
    </Style>
</ResourceDictionary>